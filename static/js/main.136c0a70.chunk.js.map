{"version":3,"sources":["lib/components/actions.js","lib/components/TransitionReplace.js","lib/components/UnitDropdown.js","lib/components/ArrowDown.js","lib/components/KeyDown.js","lib/components/InputTimeHelper.js","lib/components/AmPmInputHelper.js","lib/components/TimeInput.js","lib/index.js","App.js","reportWebVitals.js","index.js"],"names":["timers","doubleChar","value","length","slice","isOnMobileDevice","prefixes","split","window","navigator","maxTouchPoints","query","matchMedia","matches","matchMediaQuery","join","getDatePartsByProps","stringTimeValue","hour12Format","trimed","toString","trim","hourByProp","substring","minuteByProp","editHourByFormat","isZero","parseInt","hour","minute","amPm","useOnSideArrowTap","moveNext","movePrev","useCallback","e","isRight","key","isLeft","getSameInputProps","props","setInputFocused","disabled","inputRef","manuallyDisplayDropdown","onFocusCapture","onBlurCapture","push","setTimeout","ref","getTimeString","hour24Format","is12","hour12Am","hour12Pm","calculateHour","TransitionReplace","transitionName","transitionEnterTimeout","transitionLeaveTimeout","children","useState","shouldRender","setShouldRender","useEffect","duration","enterClass","className","style","transitionDuration","onAnimationEnd","additionalHeightProp","getStyleWithoutPx","element","styleProp","currentStyle","getComputedStyle","replace","scrollToActiveUnit","currentUnit","index","activeUnit","document","querySelector","scrollContainer","current","scrollerAdditionalHeight","map","prop","reduce","a","b","activeUnitAdditionalHeight","activeUnitHeight","getBoundingClientRect","height","scrollContainerHeight","scrollTo","top","behavior","UnitDropdown","data","dropdownVisibility","shouldDisplay","setDropdownVisibility","type","range","setValue","fullTimeDropdownVisibility","dropdownRef","useRef","hideDropdown","addEventListener","removeEventListener","unit","unitLabel","start","toLowerCase","includes","dateParts","data-key","onClick","stopPropagation","preventDefault","ArrowDown","id","version","xmlns","width","viewBox","d","stroke","fill","fillRule","keydownInterruptedRef","KeyDown","onKeyDown","reference","onKeyDownRef","handleKeyDown","event","handleKeyUp","isOldChrome","chromeMatch","userAgent","match","isChrome51OrLower","capture","undefined","InputTimeHelper","eachInputDropdown","inputFocused","end","setSafeValue","other","onMoveNext","Fragment","Array","Input","allowDelete","toggleAmPm","fullTimeDropdown","otherProps","changedValue","setChangedValue","keyPressed","setKeyPressed","firstFocus","setFirstFocus","changeCount","setChangeCount","propsAndState","cleanNumber","number","isNaN","newHour","hasTwoValidChars","lastCharachterOfEndRange","charAt","cannotHaveSecondChar","exceedRangeLimit","canNotWriteMoreTo","onArrowTap","hourLimit","hourAcc","onArrowDownTap","onArrowUpTap","onSideArrowTap","onBackSpaceTap","onKeyUp","onFocus","onChange","target","min","max","defaultProps","AmPmInputHelper","aPressed","toLocaleLowerCase","readOnly","TimeInput","onChangeEveryFormat","time","setTime","isMobile","setIsMobile","hourRef","minuteRef","amPmRef","setHour","t","setMinutes","newMinute","setAmPM","newAmPm","hourRange","useMemo","focusOnMinute","focusOn","blurOnMinute","blurOn","focusOnHour","focusOnAmPm","blurOnAmPm","updateTouchDevice","setTimeHourString","dateString","JSON","stringify","forEach","clearTimeout","amPmInputProps","sameInputProps","placeholder","MobileInput","minuteRange","Options","timeString","focus","blur","format24Data","h","flat","format12Data","hourInNumber","doubleCharMinutes","memo","setFullTimeDropdownVisibility","onArrowDown","prevVal","valueMobile","setValueMobile","React","PropsTemplate","features","feature","Example","title","timeInputProps","timeInputTemplate","stateNumber","stateString","fullMinimize","minimized","minimize","setMinimize","fullMinimized","setFullMinimized","App","dateEx1","setDateEx1","dateEx2","setDateEx2","dateEx3","setDateEx3","dateEx4","setDateEx4","dateEx5","setDateEx5","dateEx6","setDateEx6","dateEx7","setDateEx7","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.136c0a70.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport  let timers = []\n\nexport const doubleChar = (value) => (value?.length >= 2 ? value : \"0\" + value).slice(-2);\n\nexport const isOnMobileDevice = () => {\n  let prefixes = \" -webkit- -moz- -o- -ms- \".split(\" \");\n\n  let matchMediaQuery = function (query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if (\"ontouchstart\" in window || navigator.maxTouchPoints)  return true;\n\n  let query = [\"(\", prefixes.join(\"touch-enabled),(\"), \"heartz\", \")\"].join(\"\");\n\n  return matchMediaQuery(query);\n};\n\nexport const getDatePartsByProps = (stringTimeValue, hour12Format) => {\n  const trimed = (stringTimeValue || \"\").toString?.().trim?.();\n  const hourByProp = trimed?.substring?.(0, 2);\n  const minuteByProp = trimed?.substring?.(3, 5);\n  const editHourByFormat = hour12Format ? (hourByProp <= 12 ? hourByProp : hourByProp - 12) : hourByProp;\n  const isZero = parseInt(editHourByFormat) === 0 && hour12Format;\n  return {\n    hour: isZero ? \"12\" : doubleChar(editHourByFormat),\n    minute: doubleChar(minuteByProp),\n    amPm: isZero ? \"AM\" : hourByProp < 12 ? \"AM\" : \"PM\",\n  };\n};\n\nexport const useOnSideArrowTap = (moveNext, movePrev) => {\n  return useCallback(\n    (e) => {\n      const isRight = e?.key === \"ArrowRight\";\n      const isLeft = e?.key === \"ArrowLeft\";\n      if (isRight) moveNext?.();\n      if (isLeft) movePrev?.();\n    },\n    [moveNext, movePrev]\n  );\n};\n\nexport const getSameInputProps = (props) => {\n  const { setInputFocused, disabled, inputRef, manuallyDisplayDropdown } = props;\n  return {\n    onFocusCapture: () => !manuallyDisplayDropdown && setInputFocused(true),\n    disabled,\n    onBlurCapture: () => {\n      timers.push(setTimeout(() => setInputFocused(false), 30))\n    },\n    ref: inputRef,\n  };\n};\n\nexport const getTimeString = (hour, minute, amPm, hour12Format) => {\n  let hour24Format = !hour12Format && doubleChar(hour);\n  const is12 = hour.toString() === \"12\";\n  let hour12Am = amPm === \"AM\" && is12 && \"00\";\n  let hour12Pm = amPm === \"PM\" && is12 && \"12\";\n  const calculateHour = parseInt(hour) + (amPm === \"PM\" && hour !== \"12\" ? 12 : 0);\n  let dateString24 = doubleChar((hour24Format || hour12Am || hour12Pm || calculateHour).toString()) + \":\" + minute;\n  // let hour24 = dateString24.substring(0, 2);\n  // let hour12 = doubleChar(parseInt(hour24) < 12 ? hour24 : parseInt(hour24) - 12);\n  // let amPmString = parseInt(hour24) < 12 ? \"AM\" : \"PM\";\n  return dateString24;\n};\n\nexport function isChrome51OrLower() {\n  const userAgent = navigator.userAgent.toLowerCase();\n  const chromeMatch = userAgent.match(/chrome\\/(\\d+)/);\n\n  if (chromeMatch) {\n    const chromeVersion = parseInt(chromeMatch[1], 10);\n    return chromeVersion <= 51;\n  }\n\n  return false;\n}","import React, { useState, useEffect } from \"react\";\n\nfunction TransitionReplace(props) {\n  const { transitionName, transitionEnterTimeout, transitionLeaveTimeout, children } = props;\n  const [shouldRender, setShouldRender] = useState(false);\n\n  useEffect(() => {\n    setShouldRender(true);\n  }, []);\n\n  const handleTransitionEnd = () => {\n    if (!shouldRender) {\n      setShouldRender(true);\n    }\n  };\n\n  const handleExit = () => {\n    setShouldRender(false);\n  };\n\n  const duration = shouldRender ? transitionEnterTimeout : transitionLeaveTimeout;\n  const enterClass = shouldRender ? 'enter' : 'exit'\n  return (\n    <div>\n        <div\n            className={`${transitionName}-${enterClass} ${transitionName}-${enterClass}-active`}\n            style={{ transitionDuration: `${duration}ms` }}\n            onAnimationEnd={shouldRender ? handleTransitionEnd : handleExit}\n        >\n            {children}\n        </div>\n    </div>\n  );\n}\n\nexport default TransitionReplace;\n","import React, { useEffect , useRef } from \"react\";\nimport { doubleChar, getTimeString, timers } from \"./actions\";\nimport TransitionReplace from \"./TransitionReplace\";\n\nconst UnitDropdown = (props) => {\n  const {\n    data,\n    dropdownVisibility,\n    manuallyDisplayDropdown,\n    shouldDisplay,\n    hour12Format,\n    setDropdownVisibility,\n    type,\n    range,\n    moveNext,\n    setValue,\n    value,\n    className,\n    fullTimeDropdownVisibility,\n  } = props;\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    const hideDropdown = () => setDropdownVisibility(false);\n    window.addEventListener(\"click\", hideDropdown);\n    document.querySelector(\"body\").addEventListener(\"click\", hideDropdown);\n    return () => {\n      window.removeEventListener(\"click\", hideDropdown);\n      document.querySelector(\"body\").removeEventListener(\"click\", hideDropdown);\n    };\n  }, []);\n\n  return (\n    <TransitionReplace transitionName=\"cross-fade\" transitionEnterTimeout={250} transitionLeaveTimeout={250}>\n      {dropdownVisibility && shouldDisplay && (\n        <div ref={dropdownRef} className={`inputWrapper__dropdown ${className || \"\"}`}>\n          {data.map((unit, index) => {\n            const unitLabel = type === \"notRange\" ? unit : doubleChar(range.start + index);\n            let currentUnit = unitLabel;\n            if (fullTimeDropdownVisibility) {\n              currentUnit = unitLabel.replace(/ /g, \"\");\n              const amPm = currentUnit.toLowerCase().includes(\"pm\") ? \"PM\" : \"AM\";\n              const hour = parseInt(currentUnit.split(\":\")[0]);\n              const dateParts = {\n                hour: amPm === \"AM\" && hour === 12 ? \"00\" : hour,\n                minute: currentUnit.split(\":\")[1].replace(\"AM\", \"\").replace(\"PM\", \"\"),\n                amPm,\n              };\n              currentUnit = getTimeString(dateParts.hour, dateParts.minute, dateParts.amPm, hour12Format);\n            }\n            if (currentUnit === value) {\n              scrollToActiveUnit(currentUnit, index + 1, dropdownRef);\n              timers.push(\n                setTimeout(() => {\n                  scrollToActiveUnit(currentUnit, index + 1, dropdownRef);\n                }, 250)\n              );\n            }\n            return (\n              <span\n                data-key={currentUnit}\n                key={currentUnit}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  e.preventDefault();\n                  setValue(currentUnit);\n                  !manuallyDisplayDropdown && moveNext && moveNext();\n                  setDropdownVisibility(false);\n                }}\n                className={currentUnit === value ? \"is-active\" : \"\"}\n              >\n                <div>{unitLabel.replace(\"AM\", \"\").replace(\"PM\", \"\")}</div>\n                {unitLabel.toLowerCase().includes(\"am\") && <div>AM</div>}\n                {unitLabel.toLowerCase().includes(\"pm\") && <div>PM</div>}\n              </span>\n            );\n          })}\n        </div>\n      )}\n    </TransitionReplace>\n  );\n};\n\n const additionalHeightProp = [\n   \"borderTopWidth\",\n   \"borderBottomWidth\",\n   \"paddingTop\",\n   \"paddingBottom\",\n   \"marginBottom\",\n   \"marginTop\",\n ];\n\nconst getStyleWithoutPx = (element, styleProp) => {\n  return parseInt((element.currentStyle || window.getComputedStyle(element))[styleProp].replace(\"px\", \"\"));\n};\n\n  const scrollToActiveUnit = (currentUnit, index, ref) => {\n    let activeUnit = document.querySelector(`[data-key=\"${currentUnit}\"]`);\n    let scrollContainer = ref.current;\n\n    if (scrollContainer && activeUnit) {\n      const scrollerAdditionalHeight = additionalHeightProp\n        .map((prop) => getStyleWithoutPx(scrollContainer, prop))\n        .reduce((a, b) => a + b, 0);\n      const activeUnitAdditionalHeight = additionalHeightProp\n        .map((prop) => getStyleWithoutPx(activeUnit, prop))\n        .reduce((a, b) => a + b, 0);\n      const activeUnitHeight = activeUnit.getBoundingClientRect().height + activeUnitAdditionalHeight;\n      const scrollContainerHeight = scrollContainer.getBoundingClientRect().height + scrollerAdditionalHeight;\n      scrollContainer.scrollTo({\n        top: activeUnitHeight * index - scrollContainerHeight / 2,\n        behavior: \"smooth\",\n      });\n    }\n  };\n\nexport default UnitDropdown;","import React from \"react\";\nexport default function ArrowDown(props) {\n  return (\n    <span className=\"arrow-down \" {...props}>\n      <svg\n        id=\"svg\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"11\"\n        height=\"11\"\n        viewBox=\"0, 0, 400,234.28571428571428\"\n      >\n        <g id=\"svgg\">\n          <path\n            id=\"path0\"\n            d=\"M20.238 19.684 C 11.563 22.563,7.276 31.751,10.863 39.780 C 12.584 43.631,191.111 221.884,194.524 223.158 C 197.636 224.321,202.364 224.321,205.476 223.158 C 208.889 221.884,387.416 43.631,389.137 39.780 C 393.400 30.237,386.396 19.359,375.952 19.304 C 369.102 19.267,377.188 11.743,283.927 104.935 L 199.997 188.803 116.308 105.133 C 47.624 36.465,32.216 21.286,30.370 20.477 C 27.506 19.221,22.754 18.849,20.238 19.684 \"\n            stroke=\"none\"\n            fill=\"#000000\"\n            fillRule=\"evenodd\"\n          ></path>\n        </g>\n      </svg>\n    </span>\n  );\n}\n","import { useEffect, useRef } from \"react\";\nimport { isChrome51OrLower } from \"../components/actions\";\n\nlet keydownInterruptedRef = false\nconst KeyDown = (props) => {\n  const { onKeyDown, children, reference } = props;\n  let onKeyDownRef = useRef(onKeyDown);\n\n  useEffect(() => {\n    onKeyDownRef.current = onKeyDown;\n  }, [onKeyDown]);\n\n  const handleKeyDown = (event) => {\n    keydownInterruptedRef = true;\n    onKeyDownRef?.current?.(event);\n  };\n\n  const handleKeyUp = (event) => {\n    if (!keydownInterruptedRef) onKeyDownRef?.current?.(event);\n    keydownInterruptedRef = false;\n  };\n\n  const isOldChrome = isChrome51OrLower();\n  useEffect(() => {\n    onKeyDownRef.current = onKeyDown;\n    const element = reference?.current;\n    if (element && !isOldChrome) {\n      element.addEventListener(\"keydown\", handleKeyDown, { capture: true });\n      element.addEventListener(\"keyup\", handleKeyUp, { capture: true });\n      return () => {\n        element.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\n        element.removeEventListener(\"keyup\", handleKeyUp, { capture: true });\n      };\n    }\n  }, []);\n\n  return children(isOldChrome ? handleKeyDown : undefined, isOldChrome ? handleKeyUp : undefined);\n};\n\nexport default KeyDown;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport UnitDropdown from \"./UnitDropdown\";\nimport { doubleChar, useOnSideArrowTap, getSameInputProps, timers } from \"./actions\";\nimport ArrowDown from \"./ArrowDown\";\nimport KeyDown from \"./KeyDown\";\n\nconst InputTimeHelper = (props) => {\n  const {\n    range,\n    value,\n    eachInputDropdown,\n    manuallyDisplayDropdown,\n    setValue,\n    moveNext,\n  } = props;\n  const [inputFocused, setInputFocused] = useState(false);\n  const {start,end} = range || {};\n  const setSafeValue = useCallback(\n    (value,other) => {\n      if (parseInt(value) >= start && parseInt(value) <= end) setValue(value, other);\n    },\n    [start, end, setValue]\n  );\n\n  const onMoveNext = useCallback(() => {\n    if (moveNext) {\n      moveNext?.();\n      setInputFocused(false);\n    }\n  }, [moveNext, setInputFocused]);\n\n  return (\n    <React.Fragment>\n      <div className={`inputWrapper ${manuallyDisplayDropdown ? \"manuallyDisplayDropdown\" : \"\"}`}>\n        <Input\n          {...{\n            ...props,\n            inputFocused,\n            setSafeValue,\n            onMoveNext,\n            setInputFocused,\n          }}\n        />\n        {eachInputDropdown && manuallyDisplayDropdown && (\n          <ArrowDown\n            onClick={() => {\n              timers.push(setTimeout(() => setInputFocused(!inputFocused), 15));\n            }}\n          />\n        )}\n        <UnitDropdown\n          shouldDisplay={eachInputDropdown}\n          manuallyDisplayDropdown={manuallyDisplayDropdown}\n          data={new Array(end + 1 - start).fill(\"\")}\n          {...{\n            range,\n            moveNext: onMoveNext,\n            setValue: setSafeValue,\n            dropdownVisibility: inputFocused,\n            setDropdownVisibility: setInputFocused,\n            value,\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst Input = (props) => {\n  const {\n    range,\n    value,\n    eachInputDropdown,\n    manuallyDisplayDropdown,\n    setValue,\n    moveNext,\n    allowDelete,\n    toggleAmPm,\n    className,\n    fullTimeDropdown,\n    inputRef,\n    movePrev,\n    inputFocused,\n    setInputFocused,\n    setSafeValue,\n    onMoveNext,\n    amPm,\n    ...otherProps\n  } = props; \n  const { start, end } = range || {};\n  const [changedValue, setChangedValue] = useState(value);\n  const [keyPressed, setKeyPressed] = useState(\"\");\n  const [firstFocus, setFirstFocus] = useState(true);\n  const [changeCount, setChangeCount] = useState(0);\n  const propsAndState = { ...props, inputFocused, setInputFocused };\n\n  const cleanNumber = (number) => (!isNaN(number) ? number : \"\").toString().replace(\"0\", \"\");\n\n  useEffect(() => {\n    if (changedValue !== value) {\n      setChangedValue(value);\n    }\n  }, [value]);\n\n  const canNotWriteMoreTo = (value) => {\n    const hasTwoValidChars = cleanNumber(value).length === 2;\n    const lastCharachterOfEndRange = parseInt(end.toString().charAt(0));\n    const cannotHaveSecondChar = parseInt(cleanNumber(value)) > parseInt(lastCharachterOfEndRange);\n    const exceedRangeLimit = parseInt(cleanNumber(value) + keyPressed) > end;\n    const isMultipleOf10 = value.length === 2 && value.charAt(1) === \"0\" && value.charAt(0) !== \"0\";\n    return isMultipleOf10 || hasTwoValidChars || cannotHaveSecondChar || exceedRangeLimit;\n  };\n\n  useEffect(() => {\n    if (changedValue !== value && changedValue !== \"\" && !isNaN(keyPressed)) {\n      let newHour = doubleChar(cleanNumber(value) + keyPressed);\n      if (firstFocus) {\n        newHour = doubleChar(keyPressed);\n        setFirstFocus(false);\n        setChangeCount(changeCount + 1);\n        setChangedValue(\"\");\n      }\n      if (parseInt(newHour.toString()) >= start) {\n        parseInt(newHour.toString()) <= end && setSafeValue(newHour);\n        if (canNotWriteMoreTo(newHour) || changeCount >= 1) {\n          onMoveNext();\n        }\n      } else {\n        setFirstFocus(true);\n        setChangeCount(0);\n      }\n    }\n  }, [changedValue]);\n\n\n  const onArrowTap = useCallback(\n    (start, end, hourLimit, newHour, hourAcc) => {\n      if (parseInt(value.toString()) === start) {\n        setSafeValue(doubleChar(end));\n      } else if (value.toString() === hourLimit && amPm !== undefined) {\n        setSafeValue(newHour, { amPm: amPm === \"AM\" ? \"PM\" : \"AM\" });\n      } else {\n        setSafeValue(doubleChar(parseInt(value) + hourAcc));\n      }\n    },\n    [value, setSafeValue, amPm]\n  );\n\n  const onArrowDownTap = useCallback(\n    (e) => {\n      if (e?.key === \"ArrowDown\")  onArrowTap(start, end, \"12\", \"11\", -1);\n    },\n    [onArrowTap,start,end]\n  );\n  const onArrowUpTap = useCallback(\n    (e) => {\n      if (e?.key === \"ArrowUp\") onArrowTap(end, start, \"11\", \"12\", +1);\n    },\n    [onArrowTap,start,end]\n  );\n\n  const onSideArrowTap = useOnSideArrowTap(moveNext, movePrev);\n\n  const onKeyDown = useCallback(\n    (e) => {\n      const onBackSpaceTap = (e) => e.key === \"Backspace\" && allowDelete && setValue(\"--\");\n\n      onSideArrowTap(e);\n      setKeyPressed(e.key);\n      onBackSpaceTap(e);\n      onArrowDownTap(e);\n      onArrowUpTap(e);\n    },\n    [onSideArrowTap, setKeyPressed, allowDelete, setValue, onArrowDownTap, onArrowUpTap]\n  );\n\n  return (\n    <KeyDown onKeyDown={onKeyDown} reference={inputRef}>\n      {(onKeyDown, onKeyUp) => (\n        <input\n          onKeyDown={onKeyDown}\n          onKeyUp={onKeyUp}\n          {...getSameInputProps(propsAndState)}\n          onFocus={() => {\n            setFirstFocus(true);\n            setChangeCount(0);\n          }}\n          {...otherProps}\n          value={value}\n          onChange={(e) => setChangedValue(e.target.value)}\n          onClick={(e) => e.stopPropagation()}\n          type=\"number\"\n          min={start}\n          max={end}\n        />\n      )}\n    </KeyDown>\n  );\n};\n\n\nInputTimeHelper.defaultProps = {\n  allowDelete: false,\n};\nexport default InputTimeHelper;","import React, { useCallback, useState } from \"react\";\nimport UnitDropdown from \"./UnitDropdown\";\nimport KeyDown from \"./KeyDown\"\nimport ArrowDown from \"./ArrowDown\";\nimport { useOnSideArrowTap, getSameInputProps, timers } from \"./actions\";\n\nconst AmPmInputHelper = (props) => {\n  const [inputFocused, setInputFocused] = useState(false);\n  const {\n    amPm,\n    eachInputDropdown,\n    moveNext,\n    toggleAmPm,\n    manuallyDisplayDropdown,\n    setValue,\n    fullTimeDropdown,\n    inputRef,\n    movePrev,\n    ...otherProps\n  } = props;\n\n const onMoveNext = useCallback(() => {\n   if (moveNext) {\n     moveNext();\n     setInputFocused(false);\n   }\n }, [moveNext, setInputFocused]);\n\n  const propsAndState = { ...props, inputFocused, setInputFocused };\n\n  const onSideArrowTap = useOnSideArrowTap(moveNext, movePrev);\n\n  const onKeyDown = useCallback(\n    (e) => {\n      const { key } = e || {};\n      e.preventDefault();\n      e.stopPropagation();\n      onSideArrowTap(e);\n      const aPressed = key?.toLocaleLowerCase?.() === \"a\";\n      if (key === \"ArrowUp\" || key === \"ArrowDown\") {\n        toggleAmPm();\n      } else if (key?.toLocaleLowerCase?.() === \"p\" || aPressed) {\n        setValue(aPressed ? \"AM\" : \"PM\");\n        onMoveNext();\n      }\n    },\n    [onMoveNext, setValue, toggleAmPm, onSideArrowTap]\n  );\n    \n\n  return (\n    <React.Fragment>\n      <KeyDown onKeyDown={onKeyDown} reference={inputRef}>\n        {(onKeyDown, onKeyUp) => (\n          <input\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n            {...getSameInputProps(propsAndState)}\n            value={amPm}\n            type=\"text\"\n            {...otherProps}\n            readOnly\n          />\n        )}\n      </KeyDown>\n      {eachInputDropdown && manuallyDisplayDropdown && (\n        <ArrowDown\n          onClick={() => {\n            timers.push(setTimeout(() => setInputFocused(!inputFocused), 15));\n          }}\n        />\n      )}\n      <UnitDropdown\n        data={data}\n        shouldDisplay={eachInputDropdown}\n        manuallyDisplayDropdown={manuallyDisplayDropdown}\n        type=\"notRange\"\n        className=\"amPm\"\n        {...{\n          moveNext: onMoveNext,\n          setValue,\n          value: amPm,\n          dropdownVisibility: inputFocused,\n          setDropdownVisibility: setInputFocused,\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nconst data = [\"AM\", \"PM\"];\n\nexport default AmPmInputHelper;","import React, { useEffect, useState, useRef, memo, useCallback, useMemo } from \"react\";\nimport InputTimeHelper from \"./InputTimeHelper\";\nimport AmPmInputHelper from \"./AmPmInputHelper\";\nimport { doubleChar, isOnMobileDevice, getDatePartsByProps, getTimeString, timers } from \"./actions\";\nimport ArrowDown from \"./ArrowDown\";\nimport UnitDropdown from \"./UnitDropdown\";\n\nfunction TimeInput(props) {\n  const {\n    hour12Format,\n    value,\n    onChange,\n    onChangeEveryFormat,\n    disabled,\n    allowDelete,\n    eachInputDropdown,\n    manuallyDisplayDropdown,\n    fullTimeDropdown,\n  } = props;\n  const dateParts = getDatePartsByProps(value, hour12Format);\n  const [time, setTime] = useState(dateParts);\n  const [isMobile, setIsMobile] = useState(isOnMobileDevice());\n  const hourRef = useRef(null);\n  const minuteRef = useRef(null);\n  const amPmRef = useRef(null);\n\n  const setHour = useCallback((newHour,other = {}) => setTime((t) => ({ ...t, hour: newHour , ...other })), [setTime]);\n  const setMinutes = useCallback((newMinute, other = {}) => setTime((t) => ({ ...t, minute: newMinute , ...other })), [setTime]);\n  const setAmPM = useCallback((newAmPm,other = {}) => setTime((t) => ({ ...t, amPm: newAmPm , ...other })), [setTime]);\n\n  const hourRange = useMemo(()=>hour12Format ? { start: 1, end: 12 } : { start: 0, end: 23 },[hour12Format]);\n  const focusOnMinute = useCallback(() => focusOn(minuteRef),[]);\n  const blurOnMinute = useCallback(() => blurOn(minuteRef),[]);\n  const focusOnHour = useCallback(() => focusOn(hourRef), []);\n  const focusOnAmPm = useCallback(() => focusOn(amPmRef), []);\n  const blurOnAmPm = useCallback(() => blurOn(amPmRef), []);\n\n  const toggleAmPm = useCallback(\n    (other) => setAmPM(time?.amPm === \"AM\" ? \"PM\" : \"AM\", other),\n    [setAmPM, time?.amPm]\n  );\n\n  const updateTouchDevice = () => setIsMobile(isOnMobileDevice());\n\nconst setTimeHourString = useCallback(\n  (value) => {\n    const dateParts = getDatePartsByProps(value.replace(/ /g, \"\"), hour12Format);\n    setHour(dateParts.hour);\n    setMinutes(dateParts.minute);\n    setAmPM(dateParts.amPm);\n    if (value.toLowerCase().includes(\"am\")) {\n      setAmPM(\"AM\");\n    } else if (value.toLowerCase().includes(\"pm\")) {\n      setAmPM(\"PM\");\n    }\n  },\n  [hour12Format]\n);\n\n  useEffect(() => {\n    const {hour, minute, amPm} = time || {};\n    const dateString=getTimeString(hour, minute, amPm, hour12Format);\n    onChangeEveryFormat && onChangeEveryFormat(dateString);\n    if (hour !== \"\" && minute !== \"\" && !isMobile) {\n      onChange && onChange(dateString);\n    }\n  }, [JSON.stringify(time)]);\n\n  useEffect(() => {\n    if (!isMobile) setTimeHourString(value);\n  }, [value]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateTouchDevice);\n    return () => {\n      timers.forEach(clearTimeout);\n      window.removeEventListener(\"resize\", updateTouchDevice);\n    };\n  }, []);\n\n  const amPmInputProps = {\n    disabled,\n    eachInputDropdown: eachInputDropdown && !fullTimeDropdown,\n    manuallyDisplayDropdown: manuallyDisplayDropdown && !fullTimeDropdown,\n    fullTimeDropdown,\n  };\n  const sameInputProps = { ...amPmInputProps, allowDelete, placeholder: \"- -\" };\n\n  return (\n    <div className=\"react-time-input-picker-wrapper\">\n      <div className={`react-time-input-picker ${disabled ? \"is-disabled\" : \"\"}`}>\n        {isMobile ? (\n          <MobileInput value={value} onChange={onChange} />\n        ) : (\n          <React.Fragment>\n            <InputTimeHelper\n              inputRef={hourRef}\n              value={time?.hour}\n              setValue={setHour}\n              {...sameInputProps}\n              moveNext={focusOnMinute}\n              range={hourRange}\n              amPm={time?.amPm}\n            />\n            <InputTimeHelper\n              inputRef={minuteRef}\n              value={time?.minute}\n              {...sameInputProps}\n              setValue={setMinutes}\n              moveNext={hour12Format ? focusOnAmPm : blurOnMinute}\n              movePrev={focusOnHour}\n              range={minuteRange}\n            />\n            {hour12Format && (\n              <div className=\"inputWrapper\">\n                <AmPmInputHelper\n                  {...amPmInputProps}\n                  inputRef={amPmRef}\n                  amPm={time?.amPm}\n                  movePrev={focusOnMinute}\n                  moveNext={blurOnAmPm}\n                  toggleAmPm={toggleAmPm}\n                  setValue={setAmPM}\n                />\n              </div>\n            )}\n            <Options\n              timeString={getTimeString(time?.hour, time?.minute, time?.amPm, hour12Format)}\n              {...{ hour12Format, fullTimeDropdown, manuallyDisplayDropdown, setTimeHourString }}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst focusOn = (ref) => ref?.current?.focus?.();\nconst blurOn = (ref) => ref?.current?.blur?.();\n\nconst format24Data = new Array(24)\n  .fill(\"\")\n  .map((h, index) => [`${doubleChar(index)} : 00`, [`${doubleChar(index)} : 30`]])\n  .flat(2);\nlet format12Data = [...format24Data];\nformat12Data.forEach((hour, index) => {\n  const hourInNumber = parseInt(hour.split(\":\")[0]);\n  const doubleCharMinutes = hour.split(\":\")[1].replace(\" \", \"\");\n  if (hourInNumber === 0) {\n    format12Data[index] = `12 : ${doubleCharMinutes}  AM`;\n  } else if (hourInNumber === 12) {\n    format12Data[index] = `12 : ${doubleCharMinutes}  PM`;\n  } else if (hourInNumber < 12) {\n    format12Data[index] = `${hour}  AM`;\n  } else {\n    format12Data[index] = `${doubleChar(hourInNumber - 12)} : ${doubleCharMinutes}  PM`;\n  }\n});\n\nconst Options = memo(props => {\n  const { hour12Format, fullTimeDropdown, manuallyDisplayDropdown, setTimeHourString,timeString } = props;\n  const [fullTimeDropdownVisibility, setFullTimeDropdownVisibility] = useState(false);\n\n  useEffect(() => {\n    const hideDropdown = (e) => setFullTimeDropdownVisibility(false);\n    window.addEventListener(\"click\", hideDropdown);\n    document.querySelector(\"body\").addEventListener(\"click\", hideDropdown);\n    return () => {\n      window.removeEventListener(\"click\", hideDropdown);\n      document.querySelector(\"body\").removeEventListener(\"click\", hideDropdown);\n    };\n  }, []);\n\n  const onArrowDown = useCallback(\n    (e) => {\n      e.stopPropagation();\n      setFullTimeDropdownVisibility((prevVal) => !prevVal);\n    },\n    [setFullTimeDropdownVisibility]\n  );\n\n  return (\n    <React.Fragment>\n      {fullTimeDropdown && (\n        <div>\n          <ArrowDown onClick={onArrowDown} />\n        </div>\n      )}\n      <div className=\"fullTime__wrapper\">\n        <UnitDropdown\n          fullTimeDropdownVisibility\n          data={hour12Format ? format12Data : format24Data}\n          shouldDisplay={fullTimeDropdown && fullTimeDropdownVisibility}\n          manuallyDisplayDropdown={manuallyDisplayDropdown}\n          type=\"notRange\"\n          className=\"fullTime\"\n          hour12Format={hour12Format}\n          {...{\n            value: timeString,\n            setValue: setTimeHourString,\n            dropdownVisibility: fullTimeDropdownVisibility,\n            setDropdownVisibility: setFullTimeDropdownVisibility,\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n})\n\nconst minuteRange = { start: 0, end: 59 };\n\nconst MobileInput = memo(props => {\n  const {value,onChange} = props\n  const [valueMobile, setValueMobile] = useState(value);\n\n  return (\n    <div className=\"input-time-mobile\">\n      <input\n        type=\"time\"\n        value={valueMobile}\n        onChange={(e) => {\n          setValueMobile(e.target.value);\n          onChange && onChange(e.target.value);\n        }}\n      />\n    </div>\n  );\n})\n\nTimeInput.defaultProps = {\n  hour12Format:false,\n  disabled:false,\n  allowDelete:false,\n  eachInputDropdown:false,\n  manuallyDisplayDropdown:false,\n  fullTimeDropdown:false,\n};\n\nexport default React.memo(TimeInput);","import TimeInput from \"./components/TimeInput\";\n\nexport default TimeInput;","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport TimeInput from \"./lib/index\";\nimport \"react-time-picker-input/dist/components/TimeInput.css\"\nimport AnimateHeight from \"react-animate-height\";\n\nfunction App() {\n  const [dateEx1, setDateEx1] = useState(\"11:12\");\n  const [dateEx2, setDateEx2] = useState(\"10:27\");\n  const [dateEx3, setDateEx3] = useState(\"03:15\");\n  const [dateEx4, setDateEx4] = useState(\"22:44\");\n  const [dateEx5, setDateEx5] = useState(\"07:33\");\n  const [dateEx6, setDateEx6] = useState(\"14:50\");\n  const [dateEx7, setDateEx7] = useState(\"14:50\");\n\n  return (\n    <div>\n      <h1>Time Input Picker</h1>\n      <Example\n        title=\"12 hour format with full time dropdown :\"\n        timeInputProps={{\n          hour12Format: true,\n          fullTimeDropdown: true,\n          value: dateEx7,\n          onChange: (dateString) => {\n            setDateEx7(dateString);\n          },\n        }}\n        minimized={false}\n        fullMinimize={false}\n        stateNumber=\"7\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={7} features={[\"hour12Format\", \"fullTimeDropdown\"]} />}\n      />\n      <Example\n        title=\"12 hour format , manually manage dropdown of each input :\"\n        timeInputProps={{\n          hour12Format: true,\n          eachInputDropdown: true,\n          manuallyDisplayDropdown: true,\n          value: dateEx3,\n          onChange: (dateString) => {\n            setDateEx3(dateString);\n          },\n        }}\n        fullMinimize={false}\n        stateNumber=\"3\"\n        stateString=\"10:12\"\n        timeInputTemplate={\n          <PropsTemplate number={3} features={[\"hour12Format\", \"eachInputDropdown\", \"manuallyDisplayDropdown\"]} />\n        }\n      />\n      <Example\n        title=\"24 hour format with automatic dropdown for each input :\"\n        timeInputProps={{\n          value: dateEx4,\n          eachInputDropdown: true,\n          onChange: (dateString) => {\n            setDateEx4(dateString);\n          },\n        }}\n        stateNumber=\"4\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={4} features={[\"eachInputDropdown\"]} />}\n      />\n      <Example\n        title=\"12 hour format normal input :\"\n        timeInputProps={{ hour12Format: true, value: dateEx1, onChange: (dateString) => setDateEx1(dateString) }}\n        stateNumber=\"1\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={1} features={[\"hour12Format\"]} />}\n      />\n      <Example\n        title=\"24 hour format normal input:\"\n        timeInputProps={{\n          value: dateEx2,\n          onChange: (dateString) => {\n            setDateEx2(dateString);\n          },\n        }}\n        stateNumber=\"2\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={2} />}\n      />\n\n      <Example\n        title=\"Time Input allow delete :\"\n        timeInputProps={{\n          value: dateEx5,\n          allowDelete: true,\n          onChange: (dateString) => {\n            setDateEx5(dateString);\n          },\n        }}\n        stateNumber=\"5\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={5} features={[\"allowDelete\"]} />}\n      />\n\n      <Example\n        title=\"Disabled input\"\n        timeInputProps={{\n          value: dateEx6,\n          disabled: true,\n          onChange: (dateString) => {\n            setDateEx6(dateString);\n          },\n        }}\n        stateNumber=\"6\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={6} features={[\"disabled\"]} />}\n      />\n    </div>\n  );\n}\n\nconst PropsTemplate = ({ number, features }) => {\n  return (\n    <React.Fragment>\n      <span className=\"orange\">value</span>\n      <span className=\"blue\">{`=`}</span>\n      <span className=\"purple\">{`{`}</span>\n      <span className=\"yellow\">{`dateEx${number}`}</span>\n      <span className=\"purple\">{`}`}</span>\n      {(features || []).map((feature) => {\n        return <span className=\"orange\" key={feature}>{feature}</span>;\n      })}\n      <span className=\"orange\">{`onChange`}</span>\n      <span className=\"blue\">{`=`}</span>\n      <span className=\"purple\">{`{`}</span>\n      <span className=\"gray\">{`(`}</span>\n      <span className=\"red\">dateString</span>\n      <span className=\"gray\">{`)`}</span>\n      <span className=\"purple\">{`=>`}</span>\n      <span className=\"blue\">{`setDateEx${number}`}</span>\n      <span className=\"gray\">{`(`}</span>\n      <span className=\"red\">dateString</span>\n      <span className=\"gray\">{`)`}</span>\n      <span className=\"purple\">{`}`}</span>\n    </React.Fragment>\n  );\n};\n\nconst Example = ({ title, timeInputProps, timeInputTemplate, stateNumber, stateString, fullMinimize, minimized }) => {\n  const [minimize, setMinimize] = useState(typeof minimized !== \"undefined\" ? minimized : true);\n  const [fullMinimized, setFullMinimized] = useState(typeof fullMinimize !== \"undefined\" ? fullMinimize : true);\n  return (\n    <div className={`overflow-hidden example`}>\n      <AnimateHeight duration={300} height={fullMinimized ? 40 : \"auto\"}>\n        <div className=\"padding-bottom-5\">\n          <h3>\n            <span>{title}</span>{\" \"}\n            <svg\n              onClick={() => setFullMinimized(!fullMinimized)}\n              id=\"svg\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"14\"\n              height=\"14\"\n              viewBox=\"0, 0, 400,234.28571428571428\"\n            >\n              <g id=\"svgg\">\n                <path\n                  id=\"path0\"\n                  d=\"M20.238 19.684 C 11.563 22.563,7.276 31.751,10.863 39.780 C 12.584 43.631,191.111 221.884,194.524 223.158 C 197.636 224.321,202.364 224.321,205.476 223.158 C 208.889 221.884,387.416 43.631,389.137 39.780 C 393.400 30.237,386.396 19.359,375.952 19.304 C 369.102 19.267,377.188 11.743,283.927 104.935 L 199.997 188.803 116.308 105.133 C 47.624 36.465,32.216 21.286,30.370 20.477 C 27.506 19.221,22.754 18.849,20.238 19.684 \"\n                  stroke=\"none\"\n                  fill=\"#000000\"\n                  fillRule=\"evenodd\"\n                ></path>\n              </g>\n            </svg>{\" \"}\n          </h3>\n          <div className=\"inputcontainer\">\n            <TimeInput {...timeInputProps} />\n          </div>\n          <span>\n            <AnimateHeight duration={300} height={minimize ? 40 : \"auto\"}>\n              {minimize ? (\n                <div className={`code`}>\n                  <span className=\"codeicon\" onClick={() => setMinimize(!minimize)}>{`<>`}</span>\n                  <span className=\"gray\">{` //Code Example`}</span>\n                </div>\n              ) : (\n                <div className={`code`}>\n                  <span className=\"codeicon\" onClick={() => setMinimize(!minimize)}>{`<>`}</span>\n                  <span className=\"gray\">{` //Code Example`}</span>\n                  <span>\n                    <span className=\"purple\">{`import `}</span>\n                    <span className=\"red\">React</span>\n                    <span className=\"gray\">{`, { `}</span>\n                    <span className=\"red\">useState</span>\n                    <span className=\"gray\">{` } `}</span>\n                    <span className=\"purple\">{`from `}</span>\n                    <span className=\"green\">{`\"react\"`}</span>\n                    <span className=\"gray\">{`;`}</span>\n                  </span>\n                  <span>\n                    <span className=\"purple\">{`import `}</span>\n                    <span className=\"red\">TimeInput</span>\n                    <span className=\"purple\">{`from `}</span>\n                    <span className=\"green\">{`\"react-time-picker-input\"`}</span>\n                    <span className=\"gray\">{`;`}</span>\n                  </span>\n                  <span>\n                    <span className=\"purple\">{`function`}</span>\n                    <span className=\"blue\">{`TimeInputEx`}</span>\n                    <span className=\"gray\">{`(){`}</span>\n                  </span>\n                  <span className=\"margin-left-15\">\n                    <span className=\"purple\">{`const`}</span>\n                    <span className=\"gray\">{`[`}</span>\n                    <span className=\"yellow\">{`dateEx${stateNumber}`}</span>\n                    <span className=\"gray\">{`,`}</span>\n                    <span className=\"blue\">{`setDateEx${stateNumber}`}</span>\n                    <span className=\"gray\">{`]`}</span>\n                    <span className=\"blue\">{`= useState`}</span>\n                    <span className=\"gray\">{`(`}</span>\n                    <span className=\"green\">{`\"${stateString}\"`}</span>\n                    <span className=\"gray\">{`)`}</span>\n                  </span>\n                  <span className=\"margin-left-15\">\n                    <span className=\"purple\">return</span>\n                    <span className=\"gray\">{`<`}</span>\n                    <span className=\"yellow\">TimeInput</span>\n                    {timeInputTemplate}\n                    <span className=\"gray\">{`/>;`}</span>\n                  </span>\n                  <span>\n                    <span className=\"gray\">{`}`}</span>\n                  </span>\n                </div>\n              )}\n            </AnimateHeight>\n          </span>\n        </div>\n      </AnimateHeight>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}