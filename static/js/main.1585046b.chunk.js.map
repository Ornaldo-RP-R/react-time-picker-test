{"version":3,"sources":["components/actions.js","components/InputTimeHelper.js","components/AmPmInputHelper.js","components/arrow.svg","components/TimeInput.js","App.js","reportWebVitals.js","index.js"],"names":["doubleChar","value","length","slice","isOnMobileDevice","some","toMatchItem","navigator","userAgent","match","InputTimeHelper","props","range","setValue","moveNext","movePrev","inputRef","allowDelete","toggleAmPm","otherProps","useState","changedValue","setChangedValue","keyPressed","setKeyPressed","firstFocus","setFirstFocus","changeCount","setChangeCount","cleanNumber","number","isNaN","toString","replace","setSafeValue","parseInt","start","end","useEffect","newHour","hasTwoValidChars","lastCharachterOfEndRange","charAt","cannotHaveSecondChar","exceedRangeLimit","canNotWriteMoreTo","Fragment","className","onFocus","ref","onKeyDown","e","alert","key","onBackSpaceTap","onSideArrowTap","onArrowDownTap","onArrowUpTap","onChange","target","type","min","max","defaultProps","AmPmInputHelper","amPm","focusMinuteInput","setAmPM","id","readOnly","toLocaleLowerCase","TimeInput","hour12Format","isMobile","setIsMobile","getPartsByDate","hourByProp","trim","substring","minuteByProp","editHourByFormat","hour","minute","dateParts","setHour","setMinutes","valueMobile","setValueMobile","hourRef","useRef","minuteRef","amPmRef","hourRange","focusElementByRef","current","focus","updateTouchDevice","hour24Format","hour12Am","calculateHour","dateString24","hour24","window","addEventListener","removeEventListener","src","Arrow","placeholder","App","dateEx1","setDateEx1","dateEx2","dateEx3","dateString","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1585046b.chunk.js","sourcesContent":["export const doubleChar = (value) => (value.length >= 2 ? value : \"0\" + value).slice(-2);\nexport const isOnMobileDevice=()=>{\n     const toMatch = [\n        /Android/i,\n        /webOS/i,\n        /iPhone/i,\n        /iPad/i,\n        /iPod/i,\n        /BlackBerry/i,\n        /IEMobile/i,\n        /Opera Mini/i,\n    ];\n\n    return toMatch.some((toMatchItem) => navigator.userAgent.match(toMatchItem));\n}","import React, { useState, useEffect } from \"react\";\nimport { doubleChar } from \"./actions\";\n\nconst InputTimeHelper = (props) => {\n  const { range, value, setValue, moveNext, movePrev, inputRef, allowDelete, toggleAmPm, ...otherProps } = props;\n  const [changedValue, setChangedValue] = useState(value);\n  const [keyPressed, setKeyPressed] = useState(\"\");\n  const [firstFocus, setFirstFocus] = useState(true);\n  const [changeCount, setChangeCount] = useState(0);\n\n  const cleanNumber = (number) => (!isNaN(number) ? number : \"\").toString().replace(\"0\", \"\");\n  const setSafeValue = (value) => {\n    if (parseInt(value) >= range.start && parseInt(value) <= range.end) {\n      setValue(value);\n    }\n  };\n\n  useEffect(() => {\n    if (changedValue !== value) {\n      setChangedValue(value);\n    }\n  }, [value]);\n\n  const canNotWriteMoreTo = (value) => {\n    const hasTwoValidChars = cleanNumber(value).length === 2;\n    const lastCharachterOfEndRange = parseInt(range.end.toString().charAt(0));\n    const cannotHaveSecondChar = parseInt(cleanNumber(value)) > parseInt(lastCharachterOfEndRange);\n    const exceedRangeLimit = parseInt(cleanNumber(value) + keyPressed) > range.end;\n    const isMultipleOf10 = value.length === 2 && value.charAt(1) === \"0\" && value.charAt(0) !== \"0\";\n    return isMultipleOf10 || hasTwoValidChars || cannotHaveSecondChar || exceedRangeLimit;\n  };\n\n  useEffect(() => {\n    if (changedValue !== value && changedValue !== \"\" && !isNaN(keyPressed)) {\n      let newHour = doubleChar(cleanNumber(value) + keyPressed);\n      if (firstFocus) {\n        newHour = doubleChar(keyPressed);\n        setFirstFocus(false);\n        setChangeCount(changeCount + 1);\n        setChangedValue(\"\");\n      }\n      if (parseInt(newHour.toString()) >= range.start) {\n        parseInt(newHour.toString()) <= range.end && setSafeValue(newHour);\n        if (canNotWriteMoreTo(newHour) || changeCount >= 1) {\n          moveNext && moveNext();\n        }\n      } else {\n        setFirstFocus(true);\n        setChangeCount(0);\n      }\n    }\n  }, [changedValue]);\n\n  const onBackSpaceTap = (e) => e.key === \"Backspace\" && allowDelete && setValue(\"\");\n  const onSideArrowTap = (e) => {\n    e.key === \"ArrowRight\" && moveNext && moveNext();\n    e.key === \"ArrowLeft\" && movePrev && movePrev();\n  };\n  const onArrowDownTap = (e) => {\n    if (e.key === \"ArrowDown\") {\n      if (parseInt(value.toString()) === range.start) {\n        setSafeValue(doubleChar(range.end));\n      } else if (value.toString() === \"12\" && toggleAmPm) {\n        setSafeValue(\"11\");\n        toggleAmPm();\n      } else {\n        setSafeValue(doubleChar(parseInt(value) - 1));\n      }\n    }\n  };\n  const onArrowUpTap = (e) => {\n    if (e.key === \"ArrowUp\") {\n      if (parseInt(value.toString()) === range.end) {\n        setSafeValue(doubleChar(range.start));\n      } else if (value.toString() === \"11\" && toggleAmPm) {\n        setSafeValue(\"12\");\n        toggleAmPm();\n      } else {\n        setSafeValue(doubleChar(parseInt(value) + 1));\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"inputWrapper\">\n        <input\n          onFocus={() => {\n            setFirstFocus(true);\n            setChangeCount(0);\n          }}\n          ref={inputRef}\n          {...otherProps}\n          value={value}\n          onKeyDown={(e) => {\n            alert(e.key)\n            setKeyPressed(e.key);\n            onBackSpaceTap(e);\n            onSideArrowTap(e);\n            onArrowDownTap(e);\n            onArrowUpTap(e);\n          }}\n          onChange={(e) => setChangedValue(e.target.value)}\n          type=\"number\"\n          min={range.start}\n          max={range.end}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nInputTimeHelper.defaultProps = {\n  allowDelete: false,\n};\nexport default InputTimeHelper;","import React from \"react\";\n\nconst AmPmInputHelper = (props) => {\n  const { amPm, focusMinuteInput, toggleAmPm, setAmPM, inputRef, ...otherProps } = props;\n  return (\n    <input\n      id=\"react-time-input-picker__amPm\"\n      type=\"text\"\n      {...otherProps}\n      value={amPm}\n      ref={inputRef}\n      readOnly\n      onKeyDown={(e) => {\n        if (e.key === \"ArrowLeft\") {\n          focusMinuteInput();\n        }\n        if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n          toggleAmPm();\n        }\n        if (e.key.toLocaleLowerCase() === \"p\") {\n          setAmPM(\"PM\");\n        }\n        if (e.key.toLocaleLowerCase() === \"a\") {\n          setAmPM(\"AM\");\n        }\n      }}\n    />\n  );\n};\n\nexport default AmPmInputHelper;","export default __webpack_public_path__ + \"static/media/arrow.f832ffa9.svg\";","import React, { useEffect, useState,useRef } from \"react\";\nimport InputTimeHelper from \"./InputTimeHelper\";\nimport AmPmInputHelper from \"./AmPmInputHelper\";\nimport { doubleChar,isOnMobileDevice } from \"./actions\";\nimport Arrow from \"./arrow.svg\"\nimport \"./TimeInput.css\"\n\nfunction TimeInput(props) {\n  const { hour12Format, value, onChange, allowDelete } = props;\n  const [isMobile,setIsMobile]=useState(isOnMobileDevice());\n\n  const getPartsByDate = () => {\n    const hourByProp = (value || \"\").toString().trim().substring(0, 2);\n    const minuteByProp = (value || \"\").toString().trim().substring(3, 5);\n    const editHourByFormat = hour12Format ? (hourByProp <= 12 ? hourByProp : hourByProp - 12) : hourByProp;\n    return {\n      hour: editHourByFormat === \"00\" && hour12Format ? \"12\" : editHourByFormat,\n      minute: minuteByProp,\n      amPm: editHourByFormat === \"00\" && hour12Format ? \"AM\" :hourByProp < 12 ? \"AM\" : \"PM\",\n    };\n  };\n\n  const dateParts = getPartsByDate();\n  const [hour, setHour] = useState(dateParts.hour);\n  const [minute, setMinutes] = useState(dateParts.minute);\n  const [amPm, setAmPM] = useState(dateParts.amPm);\n  const [valueMobile,setValueMobile]=useState(value);\n   const hourRef=useRef(null);\n  const minuteRef=useRef(null);\n  const amPmRef=useRef(null);\n\n  const hourRange = hour12Format ? { start: 1, end: 12 } : { start: 0, end: 23 };\n  const focusElementByRef = (ref) =>{\n    ref.current && ref.current.focus();\n  }\n  const updateTouchDevice=()=>setIsMobile(isOnMobileDevice())\n  const toggleAmPm = () => setAmPM(amPm === \"AM\" ? \"PM\" : \"AM\");\n\n  useEffect(() => {\n    if (hour !== \"\" && minute !== \"\" && !isMobile) {\n      let hour24Format = !hour12Format && doubleChar(hour);\n      let hour12Am = amPm === \"AM\" && hour === \"12\" && \"00\";\n      const calculateHour = parseInt(hour) + (amPm === \"PM\" && hour !== \"12\" ? 12 : 0);\n      let dateString24 = doubleChar((hour24Format || hour12Am || calculateHour).toString() )+ \":\" + minute;\n      let hour24 = dateString24.substring(0, 2);\n      let hour12 = doubleChar(parseInt(hour24) < 12 ? hour24 : parseInt(hour24) - 12);\n      let amPmString = parseInt(hour24) < 12 ? \"AM\" : \"PM\";\n      onChange(dateString24);\n    }\n  }, [hour, minute, amPm]);\n\n  useEffect(() => {\n    if(!isMobile){\n      const dateParts = getPartsByDate();\n      setHour(dateParts.hour);\n      setMinutes(dateParts.minute);\n      setAmPM(dateParts.amPm);\n    }\n  }, [value]);\n\n  useEffect(()=>{\n    window.addEventListener(\"resize\", updateTouchDevice);\n    return ()=>{\n      window.removeEventListener(\"resize\", updateTouchDevice);\n    }\n  },[])\n\n  return (\n      <div className=\"react-time-input-picker\">\n        {isMobile ?<div className=\"input-time-mobile\">\n          <span>{valueMobile}</span>\n          <img src={Arrow}/>\n          <input type=\"time\" value={valueMobile} onChange={(e)=>setValueMobile(e.target.value)}/></div>:<React.Fragment>\n            <InputTimeHelper\n          inputRef={hourRef} \n          id=\"react-time-input-picker__hourInput\"\n          value={hour}\n          placeholder=\"- -\"\n          setValue={setHour}\n          allowDelete={allowDelete}\n          moveNext={() => focusElementByRef(minuteRef)}\n          range={hourRange}\n          toggleAmPm={toggleAmPm}\n        />\n        <span>:</span>\n        <InputTimeHelper\n          inputRef={minuteRef} \n          id=\"react-time-input-picker__minuteInput\"\n          value={minute}\n          placeholder=\"- -\"\n          setValue={setMinutes}\n          allowDelete={allowDelete}\n          moveNext={hour12Format ? (() =>focusElementByRef(amPmRef)):(() =>focusElementByRef(hourRef))}\n          movePrev={() => focusElementByRef(hourRef)}\n          range={{ start: 0, end: 59 }}\n        />\n        {hour12Format && (\n          <AmPmInputHelper\n            inputRef={amPmRef} \n            amPm={amPm}\n            focusMinuteInput={() => focusElementByRef(minuteRef)}\n            toggleAmPm={toggleAmPm}\n            setAmPM={(amPm) => setAmPM(amPm)}\n          />\n        )}</React.Fragment>}\n      \n      </div>\n  );\n}\n\nexport default TimeInput;","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport TimeInput from \"./components/TimeInput\";\n\nfunction App() {\n  const [dateEx1,setDateEx1]=useState('10:12')\n  const [dateEx2,setDateEx2]=useState('10:12')\n  const [dateEx3,setDateEx3]=useState('22:12')\n  return (\n   <div>\n     <h3>12 hour format Time Input  : </h3>\n     <TimeInput hour12Format value={dateEx1} onChange={(dateString)=>{setDateEx1(dateString)}}/>\n      <span>\n          <div className=\"code\">\n          <span>{`import React, { useEffect, useState } from \"react\";`}</span>  \n          <span>{`import TimeInput from \"react-time-picker-input\";`}</span>  \n          <span>{`function TimeInputEx(){`}</span>\n          <span>{`     const [dateEx1,setDateEx1]=useState('10:12')`}</span>\n          <span>{`     return <TimeInput value={dateEx1} onChange={(dateString)=>setDateEx1(dateString)}/>`}</span>\n          <span>{`}`}</span>\n         </div>\n       </span>\n      <h3>24 hour format Time Input : </h3>\n     <TimeInput value={dateEx2} onChange={(dateString)=>console.log(dateString)}/>\n        <span>\n          <div className=\"code\">\n          <span>{`import React, { useEffect, useState } from \"react\";`}</span>  \n          <span>{`import TimeInput from \"react-time-picker-input\";`}</span>  \n          <span>{`function TimeInputEx(){`}</span>\n          <span>{`     const [dateEx2,setDateEx2]=useState('10:12')`}</span>\n          <span>{`     return <TimeInput hour12Format value={dateEx2} onChange={(dateString)=>setDateEx2(dateString)}/>`}</span>\n          <span>{`}`}</span>\n         </div>\n       </span>\n       <h3>Time Input allow delete : </h3>\n     <TimeInput value={dateEx3} allowDelete onChange={(dateString)=>console.log(dateString)}/>\n     <span>\n          <div className=\"code\">\n          <span>{`import React, { useEffect, useState } from \"react\";`}</span>  \n          <span>{`import TimeInput from \"react-time-picker-input\";`}</span>  \n          <span>{`function TimeInputEx(){`}</span>\n          <span>{`     const [dateEx3,setDateEx3]=useState('10:12')`}</span>\n          <span>{`     return <TimeInput value={dateEx3} allowDelete onChange={(dateString)=>console.log(dateString)}/>`}</span>\n          <span>{`}`}</span>\n         </div>\n       </span>\n    </div>\n  );\n}\n\n   \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}