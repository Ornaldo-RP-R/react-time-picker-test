{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PropsTemplate","number","features","Fragment","className","map","feature","Example","title","timeInputProps","timeInputTemplate","stateNumber","stateString","fullMinimize","minimized","useState","minimize","setMinimize","fullMinimized","setFullMinimized","duration","height","onClick","id","version","xmlns","width","viewBox","d","stroke","fill","fillRule","App","dateEx1","setDateEx1","dateEx2","setDateEx2","dateEx3","setDateEx3","dateEx4","setDateEx4","dateEx5","setDateEx5","dateEx6","setDateEx6","dateEx7","setDateEx7","hour12Format","fullTimeDropdown","value","onChange","dateString","eachInputDropdown","manuallyDisplayDropdown","allowDelete","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d61e2b7.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport TimeInput from \"react-time-picker-input\";\nimport \"react-time-picker-input/dist/components/TimeInput.css\"\nimport AnimateHeight from \"react-animate-height\";\n\nfunction App() {\n  const [dateEx1, setDateEx1] = useState(\"11:12\");\n  const [dateEx2, setDateEx2] = useState(\"10:27\");\n  const [dateEx3, setDateEx3] = useState(\"03:15\");\n  const [dateEx4, setDateEx4] = useState(\"22:44\");\n  const [dateEx5, setDateEx5] = useState(\"07:33\");\n  const [dateEx6, setDateEx6] = useState(\"14:50\");\n  const [dateEx7, setDateEx7] = useState(\"14:50\");\n\n  return (\n    <div>\n      <h1>Time Input Picker</h1>\n      <Example\n        title=\"12 hour format with full time dropdown :\"\n        timeInputProps={{\n          hour12Format: true,\n          fullTimeDropdown: true,\n          value: dateEx7,\n          onChange: (dateString) => {\n            setDateEx7(dateString);\n          },\n        }}\n        minimized={false}\n        fullMinimize={false}\n        stateNumber=\"7\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={7} features={[\"hour12Format\", \"fullTimeDropdown\"]} />}\n      />\n      <Example\n        title=\"12 hour format , manually manage dropdown of each input :\"\n        timeInputProps={{\n          hour12Format: true,\n          eachInputDropdown: true,\n          manuallyDisplayDropdown: true,\n          value: dateEx3,\n          onChange: (dateString) => {\n            setDateEx3(dateString);\n          },\n        }}\n        fullMinimize={false}\n        stateNumber=\"3\"\n        stateString=\"10:12\"\n        timeInputTemplate={\n          <PropsTemplate number={3} features={[\"hour12Format\", \"eachInputDropdown\", \"manuallyDisplayDropdown\"]} />\n        }\n      />\n      <Example\n        title=\"24 hour format with automatic dropdown for each input :\"\n        timeInputProps={{\n          value: dateEx4,\n          eachInputDropdown: true,\n          onChange: (dateString) => {\n            setDateEx4(dateString);\n          },\n        }}\n        stateNumber=\"4\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={4} features={[\"eachInputDropdown\"]} />}\n      />\n      <Example\n        title=\"12 hour format normal input :\"\n        timeInputProps={{ hour12Format: true, value: dateEx1, onChange: (dateString) => setDateEx1(dateString) }}\n        stateNumber=\"1\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={1} features={[\"hour12Format\"]} />}\n      />\n      <Example\n        title=\"24 hour format normal input:\"\n        timeInputProps={{\n          value: dateEx2,\n          onChange: (dateString) => {\n            setDateEx2(dateString);\n          },\n        }}\n        stateNumber=\"2\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={2} />}\n      />\n\n      <Example\n        title=\"Time Input allow delete :\"\n        timeInputProps={{\n          value: dateEx5,\n          allowDelete: true,\n          onChange: (dateString) => {\n            setDateEx5(dateString);\n          },\n        }}\n        stateNumber=\"5\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={5} features={[\"allowDelete\"]} />}\n      />\n\n      <Example\n        title=\"Disabled input\"\n        timeInputProps={{\n          value: dateEx6,\n          disabled: true,\n          onChange: (dateString) => {\n            setDateEx6(dateString);\n          },\n        }}\n        stateNumber=\"6\"\n        stateString=\"10:12\"\n        timeInputTemplate={<PropsTemplate number={6} features={[\"disabled\"]} />}\n      />\n    </div>\n  );\n}\n\nconst PropsTemplate = ({ number, features }) => {\n  return (\n    <React.Fragment>\n      <span className=\"orange\">value</span>\n      <span className=\"blue\">{`=`}</span>\n      <span className=\"purple\">{`{`}</span>\n      <span className=\"yellow\">{`dateEx${number}`}</span>\n      <span className=\"purple\">{`}`}</span>\n      {(features || []).map((feature) => {\n        return <span className=\"orange\" key={feature}>{feature}</span>;\n      })}\n      <span className=\"orange\">{`onChange`}</span>\n      <span className=\"blue\">{`=`}</span>\n      <span className=\"purple\">{`{`}</span>\n      <span className=\"gray\">{`(`}</span>\n      <span className=\"red\">dateString</span>\n      <span className=\"gray\">{`)`}</span>\n      <span className=\"purple\">{`=>`}</span>\n      <span className=\"blue\">{`setDateEx${number}`}</span>\n      <span className=\"gray\">{`(`}</span>\n      <span className=\"red\">dateString</span>\n      <span className=\"gray\">{`)`}</span>\n      <span className=\"purple\">{`}`}</span>\n    </React.Fragment>\n  );\n};\n\nconst Example = ({ title, timeInputProps, timeInputTemplate, stateNumber, stateString, fullMinimize, minimized }) => {\n  const [minimize, setMinimize] = useState(typeof minimized !== \"undefined\" ? minimized : true);\n  const [fullMinimized, setFullMinimized] = useState(typeof fullMinimize !== \"undefined\" ? fullMinimize : true);\n  return (\n    <div className={`overflow-hidden example`}>\n      <AnimateHeight duration={300} height={fullMinimized ? 40 : \"auto\"}>\n        <div className=\"padding-bottom-5\">\n          <h3>\n            <span>{title}</span>{\" \"}\n            <svg\n              onClick={() => setFullMinimized(!fullMinimized)}\n              id=\"svg\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"14\"\n              height=\"14\"\n              viewBox=\"0, 0, 400,234.28571428571428\"\n            >\n              <g id=\"svgg\">\n                <path\n                  id=\"path0\"\n                  d=\"M20.238 19.684 C 11.563 22.563,7.276 31.751,10.863 39.780 C 12.584 43.631,191.111 221.884,194.524 223.158 C 197.636 224.321,202.364 224.321,205.476 223.158 C 208.889 221.884,387.416 43.631,389.137 39.780 C 393.400 30.237,386.396 19.359,375.952 19.304 C 369.102 19.267,377.188 11.743,283.927 104.935 L 199.997 188.803 116.308 105.133 C 47.624 36.465,32.216 21.286,30.370 20.477 C 27.506 19.221,22.754 18.849,20.238 19.684 \"\n                  stroke=\"none\"\n                  fill=\"#000000\"\n                  fillRule=\"evenodd\"\n                ></path>\n              </g>\n            </svg>{\" \"}\n          </h3>\n          <div className=\"inputcontainer\">\n            <TimeInput {...timeInputProps} />\n          </div>\n          <span>\n            <AnimateHeight duration={300} height={minimize ? 40 : \"auto\"}>\n              {minimize ? (\n                <div className={`code`}>\n                  <span className=\"codeicon\" onClick={() => setMinimize(!minimize)}>{`<>`}</span>\n                  <span className=\"gray\">{` //Code Example`}</span>\n                </div>\n              ) : (\n                <div className={`code`}>\n                  <span className=\"codeicon\" onClick={() => setMinimize(!minimize)}>{`<>`}</span>\n                  <span className=\"gray\">{` //Code Example`}</span>\n                  <span>\n                    <span className=\"purple\">{`import `}</span>\n                    <span className=\"red\">React</span>\n                    <span className=\"gray\">{`, { `}</span>\n                    <span className=\"red\">useState</span>\n                    <span className=\"gray\">{` } `}</span>\n                    <span className=\"purple\">{`from `}</span>\n                    <span className=\"green\">{`\"react\"`}</span>\n                    <span className=\"gray\">{`;`}</span>\n                  </span>\n                  <span>\n                    <span className=\"purple\">{`import `}</span>\n                    <span className=\"red\">TimeInput</span>\n                    <span className=\"purple\">{`from `}</span>\n                    <span className=\"green\">{`\"react-time-picker-input\"`}</span>\n                    <span className=\"gray\">{`;`}</span>\n                  </span>\n                  <span>\n                    <span className=\"purple\">{`function`}</span>\n                    <span className=\"blue\">{`TimeInputEx`}</span>\n                    <span className=\"gray\">{`(){`}</span>\n                  </span>\n                  <span className=\"margin-left-15\">\n                    <span className=\"purple\">{`const`}</span>\n                    <span className=\"gray\">{`[`}</span>\n                    <span className=\"yellow\">{`dateEx${stateNumber}`}</span>\n                    <span className=\"gray\">{`,`}</span>\n                    <span className=\"blue\">{`setDateEx${stateNumber}`}</span>\n                    <span className=\"gray\">{`]`}</span>\n                    <span className=\"blue\">{`= useState`}</span>\n                    <span className=\"gray\">{`(`}</span>\n                    <span className=\"green\">{`\"${stateString}\"`}</span>\n                    <span className=\"gray\">{`)`}</span>\n                  </span>\n                  <span className=\"margin-left-15\">\n                    <span className=\"purple\">return</span>\n                    <span className=\"gray\">{`<`}</span>\n                    <span className=\"yellow\">TimeInput</span>\n                    {timeInputTemplate}\n                    <span className=\"gray\">{`/>;`}</span>\n                  </span>\n                  <span>\n                    <span className=\"gray\">{`}`}</span>\n                  </span>\n                </div>\n              )}\n            </AnimateHeight>\n          </span>\n        </div>\n      </AnimateHeight>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}